/*
 * Karun, a package manager for ArchLinux based on 'pacman'.
 * Copyright (C) 2011  Bahman Movaqar
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.
 */
package com.bahmanm.karun;

import com.bahmanm.karun.PackageCollection.Package;
import com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel;
import java.awt.Cursor;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 * Karun
 * 
 * @author Bahman Movaqar (Bahman AT BahmanM.com)
 */
public class Karun extends javax.swing.JFrame {

	/** Creates new form Karun */
	public Karun() {
		try {
			UIManager.setLookAndFeel(new NimbusLookAndFeel());
		} catch (Exception e) {
			e.printStackTrace();
		}
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pkgListPopupMenu = new javax.swing.JPopupMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        mainToolbar = new javax.swing.JToolBar();
        quitButton = new javax.swing.JButton();
        mainScrollPane = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        mainSplitpane = new javax.swing.JSplitPane();
        repoPanel = new javax.swing.JPanel();
        repoScrollPane = new javax.swing.JScrollPane();
        repoTable = new javax.swing.JTable();
        repoButton = new javax.swing.JButton();
        pkgPanel = new javax.swing.JPanel();
        pkglistScrollPane = new javax.swing.JScrollPane();
        pkglistTable = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();
        statusbar = new javax.swing.JPanel();
        countLabel = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        mainMenu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        quitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        legendMenuItem = new javax.swing.JMenuItem();

        pkgListPopupMenu.setBorder(javax.swing.BorderFactory.createTitledBorder("Package Actions"));
        pkgListPopupMenu.setInvoker(pkglistTable);
        pkgListPopupMenu.setLabel("Package Actions");
        pkgListPopupMenu.setMinimumSize(new java.awt.Dimension(20, 50));

        jMenu1.setText("Install...");

        jMenuItem1.setText("jMenuItem1");
        jMenu1.add(jMenuItem1);

        pkgListPopupMenu.add(jMenu1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Karun Package Manager");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(300, 400));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        mainToolbar.setRollover(true);

        quitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bahmanm/karun/icons/quit16x16.png"))); // NOI18N
        quitButton.setText("Quit");
        quitButton.setFocusable(false);
        quitButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        quitButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });
        mainToolbar.add(quitButton);

        mainScrollPane.setBorder(null);
        mainScrollPane.setAutoscrolls(true);

        mainPanel.setAutoscrolls(true);
        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.LINE_AXIS));

        mainSplitpane.setDividerSize(3);

        repoPanel.setLayout(new javax.swing.BoxLayout(repoPanel, javax.swing.BoxLayout.Y_AXIS));

        repoScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Repository"));
        repoScrollPane.setPreferredSize(new java.awt.Dimension(0, 0));

        repoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        repoTable.setToolTipText("Select repository then click 'Filter' to filter the package list based on the selection");
        repoTable.setColumnSelectionAllowed(true);
        repoTable.setFillsViewportHeight(true);
        repoScrollPane.setViewportView(repoTable);
        repoTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        repoPanel.add(repoScrollPane);

        repoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bahmanm/karun/icons/filter16x16.png"))); // NOI18N
        repoButton.setText("Filter");
        repoButton.setToolTipText("Filter packages based on repository selection.");
        repoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repoButtonActionPerformed(evt);
            }
        });
        repoPanel.add(repoButton);

        mainSplitpane.setLeftComponent(repoPanel);

        pkgPanel.setLayout(new javax.swing.BoxLayout(pkgPanel, javax.swing.BoxLayout.PAGE_AXIS));

        pkglistScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Package List"));
        pkglistScrollPane.setPreferredSize(new java.awt.Dimension(0, 0));

        pkglistTable.setAutoCreateRowSorter(true);
        pkglistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Name", "Local ver.", "Repo ver.", "Description", "Repo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pkglistTable.setToolTipText("Select repository then click 'Filter' to filter the package list based on the selection");
        pkglistTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        pkglistTable.setComponentPopupMenu(pkgListPopupMenu);
        pkglistTable.setFillsViewportHeight(true);
        pkglistScrollPane.setViewportView(pkglistTable);
        pkglistTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        pkglistTable.getColumnModel().getColumn(0).setMinWidth(18);
        pkglistTable.getColumnModel().getColumn(0).setPreferredWidth(18);
        pkglistTable.getColumnModel().getColumn(0).setMaxWidth(18);

        pkgPanel.add(pkglistScrollPane);

        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bahmanm/karun/icons/details16x16.png"))); // NOI18N
        jToggleButton1.setText("Package Details");
        jToggleButton1.setToolTipText("Show highlighted package details");
        pkgPanel.add(jToggleButton1);

        mainSplitpane.setRightComponent(pkgPanel);

        mainPanel.add(mainSplitpane);

        mainScrollPane.setViewportView(mainPanel);

        statusbar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        statusLabel.setText("  ");

        javax.swing.GroupLayout statusbarLayout = new javax.swing.GroupLayout(statusbar);
        statusbar.setLayout(statusbarLayout);
        statusbarLayout.setHorizontalGroup(
            statusbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusbarLayout.createSequentialGroup()
                .addComponent(statusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 661, Short.MAX_VALUE)
                .addComponent(countLabel))
        );
        statusbarLayout.setVerticalGroup(
            statusbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statusbarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusLabel)
                    .addComponent(countLabel)))
        );

        searchTextField.setFont(new java.awt.Font("Dialog", 2, 12));
        searchTextField.setForeground(new java.awt.Color(153, 153, 153));
        searchTextField.setText("Search...");
        searchTextField.setToolTipText("Search for packages");
        searchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusLost(evt);
            }
        });

        mainMenu.setName(""); // NOI18N

        fileMenu.setText("File");

        quitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        quitMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bahmanm/karun/icons/quit16x16.png"))); // NOI18N
        quitMenuItem.setText("Quit");
        quitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(quitMenuItem);

        mainMenu.add(fileMenu);

        helpMenu.setText("Help");

        legendMenuItem.setText("Package status legend");
        helpMenu.add(legendMenuItem);

        mainMenu.add(helpMenu);

        setJMenuBar(mainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(mainToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(statusbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-685)/2, (screenSize.height-570)/2, 685, 570);
    }// </editor-fold>//GEN-END:initComponents

private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
	this.dispose();
	System.exit(0);
}//GEN-LAST:event_quitButtonActionPerformed

private void quitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitMenuItemActionPerformed
	this.dispose();
	System.exit(0);
}//GEN-LAST:event_quitMenuItemActionPerformed

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
	((DefaultTableModel)repoTable.getModel()).setNumRows(0);
	((DefaultTableModel)pkglistTable.getModel()).setNumRows(0);
	
	statusLabel.setText("Updating repository list...");
	setCursor(new Cursor((Cursor.WAIT_CURSOR)));
	SwingUtilities.invokeLater(new Runnable() {

		@Override
		public void run() {
			fillReposTable();
			statusLabel.setText("Please select a repository filter.");
			setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
		}
	});

}//GEN-LAST:event_formWindowOpened

private void repoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repoButtonActionPerformed
	int row = repoTable.getSelectedRow();
	if (row == -1) {
		JOptionPane.showMessageDialog(this, "Please select a repository.",
				"No repository selected", JOptionPane.INFORMATION_MESSAGE);
		return;
	}
	final String repo = (String) repoTable.getModel().getValueAt(row, 0);

	statusLabel.setText("Updating package list for repository " + repo + "...");
	setCursor(new Cursor(Cursor.WAIT_CURSOR));
	SwingUtilities.invokeLater(new Runnable() {

		@Override
		public void run() {
			populatePackageList(repo);
			statusLabel.setText("Package list updated.");
			setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
		}
	});
}//GEN-LAST:event_repoButtonActionPerformed

private void searchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusGained
	if (searchTextField.getText().equals("Search..."))
		searchTextField.setText("");
}//GEN-LAST:event_searchTextFieldFocusGained

private void searchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusLost
	if (searchTextField.getText().equals(""))
		searchTextField.setText("Search...");
}//GEN-LAST:event_searchTextFieldFocusLost

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Karun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Karun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Karun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Karun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new Karun().setVisible(true);
			}
		});
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel countLabel;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JMenuItem legendMenuItem;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JSplitPane mainSplitpane;
    private javax.swing.JToolBar mainToolbar;
    private javax.swing.JPopupMenu pkgListPopupMenu;
    private javax.swing.JPanel pkgPanel;
    private javax.swing.JScrollPane pkglistScrollPane;
    private javax.swing.JTable pkglistTable;
    private javax.swing.JButton quitButton;
    private javax.swing.JMenuItem quitMenuItem;
    private javax.swing.JButton repoButton;
    private javax.swing.JPanel repoPanel;
    private javax.swing.JScrollPane repoScrollPane;
    private javax.swing.JTable repoTable;
    private javax.swing.JTextField searchTextField;
    private final javax.swing.JLabel statusLabel = new javax.swing.JLabel();
    private javax.swing.JPanel statusbar;
    // End of variables declaration//GEN-END:variables
	private PacmanConfHelper pacmanConfHelper;

	/**
	 * Uses PacmanConfHelper to update repoTable.
	 */
	private void fillReposTable() {
		TableModel model = repoTable.getModel();
		((DefaultTableModel) model).setNumRows(0);
		try {
			pacmanConfHelper = PacmanConfHelper.get();
			ArrayList<String> repos = pacmanConfHelper.getRepos();
			Iterator<String> iterator = repos.iterator();

			((DefaultTableModel) model).setNumRows(repos.size() + 1);
			model.setValueAt("*all*", 0, 0);

			for (int i=1; iterator.hasNext(); i++) {
				String repo = iterator.next();
				model.setValueAt(repo, i, 0);
			}
		} catch (Exception e) {
			Logger.getLogger(Karun.class.getName()).log(Level.SEVERE, null, e);
		}
	}

	/**
	 * Populate package list.
	 * 
	 * @param repo Repository name
	 */
	private void populatePackageList(String repo) {
		try {
			PackageCollection packageCollection = new PackageCollection(repo, 
					pacmanConfHelper.getDbPath());
			
			HashMap<String, Package> collection = packageCollection.getCollection();
			Set<String> keySet = collection.keySet();
			Iterator<String> iterator = keySet.iterator();
			
			TableModel model = pkglistTable.getModel();
			((DefaultTableModel) model).setNumRows(keySet.size());
			
			for (int i=0; iterator.hasNext(); i++) {
				Package p = collection.get(iterator.next());
				model.setValueAt(" ", i, 0); // status
				model.setValueAt(p.getName(), i, 1); // name
				model.setValueAt(p.getLocalVersion(), i, 2); // local version
				model.setValueAt(p.getRepoVersion(), i, 3); // repo version
				model.setValueAt(p.getDescription(), i, 4); // description
				model.setValueAt(p.getRepo(), i, 5); // repo
			}
			countLabel.setText(keySet.size() + " packages in '" + repo + "'");
		} catch (Exception ex) {
			Logger.getLogger(Karun.class.getName()).log(Level.SEVERE, null, ex);
			Utils.showExceptionDialog(this, ex);
		}
	}
}